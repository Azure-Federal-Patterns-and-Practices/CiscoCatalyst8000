{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.21.1.54444",
      "templateHash": "5193757238742402008"
    }
  },
  "parameters": {
    "AuthenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "The type of authentication to use on the virtual machine. SSH key is recommended."
      }
    },
    "AvailabilitySetName": {
      "type": "string",
      "defaultValue": "CSR-8000-AVSET",
      "metadata": {
        "description": "The name of the availability set."
      }
    },
    "DiskSKU": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "StandardSSD_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The performance SKU of the OS disk drives."
      }
    },
    "Image": {
      "type": "string",
      "allowedValues": [
        "Cisco Catalyst 8000V-PAYG-DNA Advantage-17.11.01a - x64 Gen1",
        "Cisco Catalyst 8000V-PAYG-DNA Essentials-17.11.01a - x64 Gen1",
        "Cisco Catalyst 8000V Edge Software-BYOL-17.12.01a - x64 Gen1"
      ],
      "metadata": {
        "description": "The marketplace image that will be used on the virtual machine."
      }
    },
    "LocalAdministratorPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "The SSH key or password for the virtual machine. SSH key is recommended."
      }
    },
    "LocalAdministratorUsername": {
      "type": "string",
      "defaultValue": "csr8000admin",
      "metadata": {
        "description": "The username for the local administrator account."
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for the Azure resources deployed in this solution."
      }
    },
    "NetworkInterfacesCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 2,
      "metadata": {
        "description": "The number of network interfaces to put on each virtual machine."
      }
    },
    "NetworkSecurityGroupName": {
      "type": "string",
      "defaultValue": "CSR8000-NSG",
      "metadata": {
        "description": "The name of the network secuity group."
      }
    },
    "RouteTableName": {
      "type": "string",
      "defaultValue": "CSR8000-RouteTable",
      "metadata": {
        "description": "The name of the route table."
      }
    },
    "Subnet1Name": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet for the WAN network interfaces."
      }
    },
    "Subnet2Name": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet for the LAN network interfaces."
      }
    },
    "Tags": {
      "type": "object",
      "metadata": {
        "description": "The metadata for the Azure resources deployed in this solution."
      }
    },
    "VirtualMachineInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The number of Cisco CSR's deployed in this solution."
      }
    },
    "VirtualMachineNamePrefix": {
      "type": "string",
      "defaultValue": "CSR-8000v",
      "metadata": {
        "description": "Basic Name Pattern of VM Not More than 15 Characters we are appending the Ordinal Number at end of the name"
      }
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_F16s_v2",
        "Standard_F32s_v2"
      ],
      "metadata": {
        "description": "Select the size for your virtual machine"
      }
    },
    "VirtualNetworkResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the existing virtual network provisioned for the workload deployment."
      }
    }
  },
  "variables": {
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('LocalAdministratorUsername'))]",
            "keyData": "[parameters('LocalAdministratorPasswordOrKey')]"
          }
        ]
      }
    },
    "Products": {
      "Cisco Catalyst 8000V-PAYG-DNA Advantage-17.11.01a - x64 Gen1": {
        "name": "17_11_01a-payg-advantage",
        "offer": "cisco-c8000v-payg",
        "product": "cisco-c8000v-payg",
        "sku": "17_11_01a-payg-advantage"
      },
      "Cisco Catalyst 8000V-PAYG-DNA Essentials-17.11.01a - x64 Gen1": {
        "name": "17_11_01a-payg-essentials",
        "offer": "cisco-c8000v-payg",
        "product": "cisco-c8000v-payg",
        "sku": "17_11_01a-payg-essentials"
      },
      "Cisco Catalyst 8000V Edge Software-BYOL-17.12.01a - x64 Gen1": {
        "name": "17_12_01a-byol",
        "offer": "cisco-c8000v",
        "product": "cisco-c8000v",
        "sku": "17_12_01a-byol"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2023-03-01",
      "name": "[parameters('AvailabilitySetName')]",
      "location": "[parameters('Location')]",
      "tags": "[if(contains(parameters('Tags'), 'Microsoft.Compute/availabilitySets'), parameters('Tags')['Microsoft.Compute/availabilitySets'], createObject())]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 5
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2023-04-01",
      "name": "[parameters('RouteTableName')]",
      "location": "[parameters('Location')]",
      "tags": "[if(contains(parameters('Tags'), 'Microsoft.Network/routeTables'), parameters('Tags')['Microsoft.Network/routeTables'], createObject())]",
      "properties": {
        "routes": [],
        "disableBgpRoutePropagation": true
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-04-01",
      "name": "[parameters('NetworkSecurityGroupName')]",
      "location": "[parameters('Location')]",
      "tags": "[if(contains(parameters('Tags'), 'Microsoft.Network/networkSecurityGroups'), parameters('Tags')['Microsoft.Network/networkSecurityGroups'], createObject())]",
      "properties": {
        "securityRules": [
          {
            "name": "SSHnsgRule",
            "properties": {
              "description": "description",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "copy": {
        "name": "networkInterfaces_WAN",
        "count": "[length(range(0, parameters('VirtualMachineInstances')))]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}-WAN-NIC{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[copyIndex()], 1))]",
      "location": "[parameters('Location')]",
      "tags": "[if(contains(parameters('Tags'), 'Microsoft.Network/networkInterfaces'), parameters('Tags')['Microsoft.Network/networkInterfaces'], createObject())]",
      "properties": {
        "enableAcceleratedNetworking": true,
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, split(parameters('VirtualNetworkResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks/subnets', split(parameters('VirtualNetworkResourceId'), '/')[8], parameters('Subnet1Name'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('NetworkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('NetworkSecurityGroupName'))]"
      ]
    },
    {
      "copy": {
        "name": "networkInterfaces_LAN",
        "count": "[length(range(0, parameters('VirtualMachineInstances')))]"
      },
      "condition": "[greater(parameters('NetworkInterfacesCount'), 1)]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-04-01",
      "name": "[format('{0}-LAN-NIC{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[copyIndex()], 1))]",
      "location": "[parameters('Location')]",
      "tags": "[if(contains(parameters('Tags'), 'Microsoft.Network/networkInterfaces'), parameters('Tags')['Microsoft.Network/networkInterfaces'], createObject())]",
      "properties": {
        "enableAcceleratedNetworking": true,
        "enableIPForwarding:" true,
        "ipConfigurations": [
          {
            "name": "ipConfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, split(parameters('VirtualNetworkResourceId'), '/')[4]), 'Microsoft.Network/virtualNetworks/subnets', split(parameters('VirtualNetworkResourceId'), '/')[8], parameters('Subnet2Name'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('NetworkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('NetworkSecurityGroupName'))]"
      ]
    },
    {
      "copy": {
        "name": "virtualMachines",
        "count": "[length(range(0, parameters('VirtualMachineInstances')))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[format('{0}-{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[copyIndex()], 1))]",
      "location": "[parameters('Location')]",
      "tags": "[if(contains(parameters('Tags'), 'Microsoft.Compute/virtualMachines'), parameters('Tags')['Microsoft.Compute/virtualMachines'], createObject())]",
      "identity": {
        "type": "SystemAssigned"
      },
      "plan": {
        "name": "[variables('Products')[parameters('Image')].name]",
        "product": "[variables('Products')[parameters('Image')].product]",
        "publisher": "cisco"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[format('{0}-{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[copyIndex()], 1))]",
          "adminUsername": "[parameters('LocalAdministratorUsername')]",
          "adminPassword": "[parameters('LocalAdministratorPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('AuthenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('Products')[parameters('Image')].offer]",
            "publisher": "cisco",
            "sku": "[variables('Products')[parameters('Image')].sku]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[format('{0}{1}-OSDISK', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[copyIndex()], 1))]",
            "createOption": "FromImage",
            "deleteOption": "Delete",
            "managedDisk": {
              "storageAccountType": "[parameters('DiskSKU')]"
            },
            "diskSizeGB": 127
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-WAN-NIC{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[range(0, parameters('VirtualMachineInstances'))[copyIndex()]], 1)))]",
              "properties": {
                "deleteOption": "Delete",
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-LAN-NIC{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[range(0, parameters('VirtualMachineInstances'))[copyIndex()]], 1)))]",
              "properties": {
                "deleteOption": "Delete",
                "primary": false
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-LAN-NIC{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[range(0, parameters('VirtualMachineInstances'))[copyIndex()]], 1)))]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-WAN-NIC{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[range(0, parameters('VirtualMachineInstances'))[copyIndex()]], 1)))]"
      ]
    },
    {
      "copy": {
        "name": "roleAssignment",
        "count": "[length(range(0, parameters('VirtualMachineInstances')))]"
      },
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Network/routeTables/{0}', parameters('RouteTableName'))]",
      "name": "[guid(resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[range(0, parameters('VirtualMachineInstances'))[copyIndex()]], 1))), '4d97b98b-1d4f-4787-a291-c67834d212e7', resourceId('Microsoft.Network/routeTables', parameters('RouteTableName')))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[range(0, parameters('VirtualMachineInstances'))[copyIndex()]], 1))), '2023-03-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/routeTables', parameters('RouteTableName'))]",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[range(0, parameters('VirtualMachineInstances'))[copyIndex()]], 1)))]",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}-{1}', parameters('VirtualMachineNamePrefix'), add(range(0, parameters('VirtualMachineInstances'))[range(0, parameters('VirtualMachineInstances'))[copyIndex()]], 1)))]"
      ]
    }
  ]
}
